name: CI/CD Pipeline with Auto-Adding GitHub Secrets

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allow manual triggering

jobs:
  check-env-secrets:
    name: Check and Add Missing Environment Variables
    runs-on: ubuntu-latest
    outputs:
      missing_vars: ${{ env.missing_vars || 'none' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Environment Variables
        id: extract_vars
        run: |
          # Scan multiple file types for env variables
          grep -rhEo '\$\{([A-Z_]+)\}' whatsappclone/src/ whatsappclone/src/main/resources/ | \
            cut -d'{' -f2 | tr -d '}' | sort -u > env_variables.txt
          
          echo "Extracted environment variables:"
          cat env_variables.txt
          echo "env_vars=$(cat env_variables.txt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Get GitHub Secrets
        id: get_secrets
        run: |
          echo "Fetching GitHub repository secrets..."
          SECRETS_JSON='${{ toJson(secrets) }}'
          
          if [[ "$SECRETS_JSON" == "null" ]]; then
            echo "::warning:: No GitHub secrets found. Will check for missing variables."
            touch github_secrets.txt
          else
            echo "$SECRETS_JSON" | jq -r 'keys[]' > github_secrets.txt
            echo "Existing secrets:"
            cat github_secrets.txt
          fi

      - name: Compare Variables and Secrets
        id: compare_secrets
        run: |
          missing_vars=()
          for var in $(cat env_variables.txt); do
            if ! grep -q "^$var$" github_secrets.txt; then
              missing_vars+=("$var")
            fi
          done
          
          if [ ${#missing_vars[@]} -ne 0 ]; then
            echo "‚ùå Missing variables: ${missing_vars[*]}"
            echo "missing_vars=$(IFS=,; echo "${missing_vars[*]}")" >> $GITHUB_ENV
            echo "::set-output name=missing_vars::${missing_vars[*]}"
          else
            echo "‚úÖ All variables accounted for"
          fi

      - name: Request Manual Secret Input
        if: env.missing_vars != ''
        id: request_secrets
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          payload: |
            {
              "text": "‚ö†Ô∏è Missing GitHub Secrets Detected",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*üö® Missing GitHub Secrets in ${{ github.repository }}*"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "The following environment variables need to be added:\n`${{ env.missing_vars }}`"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Add Secrets"
                      },
                      "url": "https://github.com/${{ github.repository }}/settings/secrets/actions/new"
                    }
                  ]
                }
              ]
            }

  build:
    name: Build and Deploy Application
    needs: check-env-secrets
    if: needs.check-env-secrets.outputs.missing_vars == 'none' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            whatsappclone/target
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build Application
        working-directory: whatsappclone
        run: mvn clean package -DskipTests

      - name: Docker Build & Push
        if: success()
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build -t whatsapp-clone:${{ github.sha }} .
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push whatsapp-clone:${{ github.sha }}

      - name: Deploy to Kubernetes
        if: success()
        uses: azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
            whatsappclone/deployments/*.yaml
          images: |
            whatsapp-clone:${{ github.sha }}
          kubectl-version: 'latest'