name: Enhanced Spring Boot CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  secret-management:
    name: Secret Synchronization
    runs-on: ubuntu-latest
    outputs:
      build_approved: ${{ steps.validate-secrets.outputs.ready }}
    steps:
      - uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update && sudo apt install gh -y
          gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"

      - name: Scan Spring Boot Properties
        id: scan-props
        run: |
          # Scan application.properties/yml and Java files
          grep -rohE '\$\{[A-Z0-9_]+\}' whatsappclone/src/main/resources/ | \
            sed 's/\${//;s/}//' | sort -u > env_vars.txt
          
          grep -rohE '@Value\("\${[A-Z0-9_]+}"' whatsappclone/src/main/java/ | \
            grep -oE '\${[A-Z0-9_]+}' | \
            sed 's/\${//;s/}//' >> env_vars.txt
          
          sort -u env_vars.txt -o env_vars.txt
          echo "Found Spring properties:"
          cat env_vars.txt
          echo "env_vars=$(cat env_vars.txt | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

      - name: Validate Secrets
        id: validate-secrets
        run: |
          gh secret list --json name | jq -r '.[].name' > secrets.txt
          
          # Find missing secrets
          comm -23 env_vars.txt secrets.txt > missing.txt
          missing_count=$(wc -l < missing.txt)
          
          if [ $missing_count -gt 0 ]; then
            echo "Adding $missing_count secrets..."
            while read var; do
              # Try to get value from .env files first
              val=$(grep -m1 "^$var=" whatsappclone/src/main/resources/*.properties 2>/dev/null | cut -d '=' -f2- || \
                    echo "PLACEHOLDER_$(openssl rand -hex 6)")
              gh secret set "$var" --body "$val"
              echo "Added $var"
            done < missing.txt
          
            echo "::warning::New secrets added. Update placeholders in repo settings."
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "missing_vars=$(cat missing.txt | tr '\n' ',')" >> $GITHUB_OUTPUT
          else
            echo "ready=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        if: steps.validate-secrets.outputs.ready == 'false'
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "⚠️ New Secrets Added to ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Action Required:* Update these placeholder secrets:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "`${{ steps.validate-secrets.outputs.missing_vars }}`"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Update Secrets"
                      },
                      "url": "https://github.com/${{ github.repository }}/settings/secrets/actions"
                    }
                  ]
                }
              ]
            }

  build-and-deploy:
    name: Build & Deploy
    needs: secret-management
    if: needs.secret-management.outputs.build_approved == 'true'
    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            whatsappclone/target
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build with Maven
        working-directory: whatsappclone
        run: mvn clean package -DskipTests

      - name: Verify JAR
        run: |
          java -jar whatsappclone/target/*.jar --spring.profiles.active=ci &
          sleep 60
          curl -s http://localhost:8080/actuator/health | grep -q '"status":"UP"' || exit 1

      - name: Docker Build & Push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cd whatsappclone
          docker build -t whatsapp-clone:${{ github.sha }} .
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag whatsapp-clone:${{ github.sha }} your-registry/whatsapp-clone:${{ github.sha }}
          docker push your-registry/whatsapp-clone:${{ github.sha }}

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v4
        with:
          namespace: default
          manifests: whatsappclone/deployments/*.yaml
          images: your-registry/whatsapp-clone:${{ github.sha }}
          kubectl-version: latest