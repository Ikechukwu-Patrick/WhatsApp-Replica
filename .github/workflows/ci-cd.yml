name: Build and Deploy App

on:
  push:
    branches:
      - master

jobs:
  secret-management:
    runs-on: ubuntu-latest
    outputs:
      build_approved: ${{ steps.check-secrets.outputs.build_approved }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Load required env vars
        id: load-env
        run: |
          echo "REQUIRED_VARS=$(cat .github/env_vars.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Check for required secrets
        id: check-secrets
        run: |
          build_approved=true
          for var in ${{ steps.load-env.outputs.REQUIRED_VARS }}; do
            if [[ -z "${{ secrets[$var] }}" ]]; then
              echo "Missing secret: $var"
              echo "::warning file=.github/env_vars.txt::Missing secret $var"
              build_approved=false
              echo "Creating placeholder for $var"
              echo "${var}=placeholder" >> $GITHUB_ENV
            else
              echo "${var}=${{ secrets[$var] }}" >> $GITHUB_ENV
            fi
          done
          echo "build_approved=$build_approved" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: secret-management
    if: needs.secret-management.outputs.build_approved == 'true'
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: app_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/app_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 > /dev/null 2>&1; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting ($i)..."
            sleep 5
          done

      - name: Build app
        run: ./gradlew clean build

      - name: Deploy app
        run: echo "ðŸš€ Deploying..."

#        nunib
