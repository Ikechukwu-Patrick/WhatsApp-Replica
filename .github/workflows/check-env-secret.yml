name: Check and Add Missing Environment Variables in GitHub Secrets

on:
  push:
    branches:
      - master

jobs:
  check-env-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Environment Variables from application.properties
        id: extract_vars
        run: |
          # Extract variables inside ${...} in application.properties
          grep -oP '\$\{\K[A-Za-z_][A-Za-z0-9_]*(?=\})' whatsappclone/src/main/resources/application.properties | sort -u > env_variables.txt

          echo "Extracted environment variables:"
          cat env_variables.txt
          echo "::set-output name=env_vars::$(cat env_variables.txt | tr '\n' ' ')"

      - name: Get GitHub Secrets
        id: get_secrets
        run: |
          echo "GitHub repository secrets:"
          
          # Convert secrets to JSON format
          SECRETS_JSON='${{ toJson(secrets) }}'

          if [[ "$SECRETS_JSON" == "null" || -z "$SECRETS_JSON" ]]; then
            echo "::error:: No GitHub secrets found. Make sure secrets are added in the repository settings."
            exit 1
          fi

          echo "$SECRETS_JSON" | jq -r 'keys[]' > github_secrets.txt
          cat github_secrets.txt

      - name: Compare Environment Variables and Secrets
        id: compare_secrets
        run: |
          echo "Checking for missing environment variables..."
          missing_vars=()
          for var in $(cat env_variables.txt); do
            if ! grep -q "^$var$" github_secrets.txt; then
              missing_vars+=("$var")
            fi
          done
          
          if [ ${#missing_vars[@]} -ne 0 ]; then
            echo "❌ Missing environment variables in GitHub Secrets:"
            printf '%s\n' "${missing_vars[@]}"
            echo "::set-output name=missing_vars::$(IFS=,; echo "${missing_vars[*]}")"
          else
            echo "✅ All environment variables are present in GitHub Secrets. Good job engineers! 🎉"
          fi

      - name: Add Missing Secrets to GitHub
        if: steps.compare_secrets.outputs.missing_vars != ''
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # GitHub Personal Access Token
          REPO: ${{ github.repository }}
        run: |
          echo "🛠 Adding missing secrets to GitHub..."
          IFS=',' read -r -a missing_vars <<< "${{ steps.compare_secrets.outputs.missing_vars }}"
          
          for secret in "${missing_vars[@]}"; do
            echo "🔹 Adding secret: $secret"

            # Generate a random placeholder value (change this logic as needed)
            SECRET_VALUE="PLACEHOLDER_VALUE"

            # Add the secret using GitHub API
            curl -X PUT "https://api.github.com/repos/$REPO/actions/secrets/$secret" \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: token $GH_PAT" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "{\"encrypted_value\":\"$SECRET_VALUE\"}"
          done
