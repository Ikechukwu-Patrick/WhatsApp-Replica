#!/bin/bash
# Enhanced Universal GitHub Secret Synchronization

  set -eo pipefail
  
  # Configuration
  REPO_OWNER=$(gh repo view --json owner -q '.owner.login')
  REPO_NAME=$(gh repo view --json name -q '.name')
  TEMP_DIR=$(mktemp -d)
  LOG_FILE="$TEMP_DIR/sync-secrets.log"
  
  # Cleanup function
  cleanup() {
  rm -rf "$TEMP_DIR"
}
  trap cleanup EXIT
  
  # Log function
  log() {
  echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

  log "🔍 Starting secret synchronization for $REPO_OWNER/$REPO_NAME"
  
  # Scan for environment variables with improved patterns
  log "Scanning repository for environment variable patterns..."
  find . -type f \( \
  -name "*.js" -o \
  -name "*.ts" -o \
  -name "*.java" -o \
  -name "*.kt" -o \
  -name "*.py" -o \
  -name "*.go" -o \
  -name "*.rs" -o \
  -name "*.php" -o \
  -name "*.properties" -o \
  -name "*.yml" -o \
  -name "*.yaml" -o \
  -name ".env*" \
  \) ! -path "./node_modules/*" ! -path "./.git/*" -exec grep -Eho \
  '\$\{[A-Z0-9_]+\}|@Value\("\\$\\{[A-Z0-9_]+\\}"|process\.env\.[A-Z0-9_]+|env\.[A-Z0-9_]+|os\.getenv\(["'"'"'][A-Z0-9_]+' {} + | \
  grep -oE '[A-Z0-9_]+' | \
  sort -u > "$TEMP_DIR/code_vars.txt"
  
  # Get .env file variables (including .env.local, .env.development, etc.)
  for env_file in .env*; do
  [ -f "$env_file" ] && grep -vh '^#' "$env_file" | grep -v '^$' | cut -d '=' -f1 >> "$TEMP_DIR/code_vars.txt"
  done
  
  sort -u "$TEMP_DIR/code_vars.txt" -o "$TEMP_DIR/code_vars.txt"
  var_count=$(wc -l < "$TEMP_DIR/code_vars.txt")
  log "Found $var_count unique variables in code"
  
  # Get current GitHub secrets with pagination support
  log "Fetching existing secrets..."
  gh api -X GET "/repos/$REPO_OWNER/$REPO_NAME/actions/secrets" \
  --paginate --jq '.secrets[].name' | sort > "$TEMP_DIR/gh_secrets.txt"
  
  # Find missing secrets
  comm -23 "$TEMP_DIR/code_vars.txt" "$TEMP_DIR/gh_secrets.txt" > "$TEMP_DIR/missing.txt"
  
  if [ ! -s "$TEMP_DIR/missing.txt" ]; then
  log "✅ All environment variables are properly secured"
  exit 0
  fi
  
  missing_count=$(wc -l < "$TEMP_DIR/missing.txt")
  log "⚠️ Missing $missing_count secrets:"
  cat "$TEMP_DIR/missing.txt" | tee -a "$LOG_FILE"
  
  # Add missing secrets
  log "Adding missing secrets..."
  while IFS= read -r var; do
  log "Processing $var..."
  
  # Try to get value from .env files with priority:
  # 1. .env.production
  # 2. .env
  # 3. Other .env files
  value=""
  for env_file in .env.production .env .env.*; do
  [ -f "$env_file" ] && value=$(grep -m1 "^$var=" "$env_file" | cut -d '=' -f2-) && break
  done
  
  # Generate secure placeholder if not found
  if [ -z "$value" ]; then
  value="PLACEHOLDER_$(openssl rand -hex 8)"
  log "ℹ️ Using generated placeholder for $var"
  fi
  
  # Add to GitHub Secrets
  if gh secret set "$var" --body "$value"; then
  log "✅ Added $var to GitHub Secrets"
  else
  log "❌ Failed to add $var"
  exit 1
  fi
  done < "$TEMP_DIR/missing.txt"
  
  log "🎉 Secret synchronization complete!"
  log "⚠️ Remember to update placeholder values in GitHub Secrets:"
  log "https://github.com/$REPO_OWNER/$REPO_NAME/settings/secrets/actions"
  
  # Output summary
  echo ""
  echo "=== Secret Synchronization Summary ==="
echo "Repository: $REPO_OWNER/$REPO_NAME"
echo "Variables scanned: $var_count"
echo "New secrets added: $missing_count"
echo "Log file: $LOG_FILE"
echo "====================================="